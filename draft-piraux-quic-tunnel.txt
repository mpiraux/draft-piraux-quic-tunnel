



QUIC Working Group                                        M. Piraux, Ed.
Internet-Draft                                            O. Bonaventure
Intended status: Experimental                                  UCLouvain
Expires: August 8, 2020                                February 05, 2020


                Tunneling Internet protocols inside QUIC
                      draft-piraux-quic-tunnel-01

Abstract

   This document specifies methods for tunneling Internet protocols such
   as TCP, UDP, IP and QUIC inside a QUIC connection.

   TODO Maybe rescope abstract

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 8, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.




Piraux & Bonaventure     Expires August 8, 2020                 [Page 1]

Internet-Draft                 QUIC Tunnel                 February 2020


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions and Definitions . . . . . . . . . . . . . . . . .   3
   3.  Reference environment . . . . . . . . . . . . . . . . . . . .   3
   4.  The datagram mode . . . . . . . . . . . . . . . . . . . . . .   4
   5.  Connection establishment  . . . . . . . . . . . . . . . . . .   5
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
     6.1.  Privacy . . . . . . . . . . . . . . . . . . . . . . . . .   6
     6.2.  Ingress Filtering . . . . . . . . . . . . . . . . . . . .   6
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
     7.1.  Registration of QUIC tunnel Identification String . . . .   6
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   6
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   7
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   Mobile devices such as laptops, smartphones or tablets have different
   requirements than the traditional fixed devices.  These mobile
   devices often change their network attachment.  They are often
   attached to trusted networks, but sometimes they need to be connected
   to untrusted networks where their communications can be eavesdropped,
   filtered or modified.  In these situations, the classical approach is
   to rely on VPN protocols such as DTLS, TLS or IPSec.  These VPN
   protocols provide the encryption and authentication functions to
   protect those mobile clients from malicious behaviors in untrusted
   networks.

   On the other hand, these devices are often multihomed and many expect
   to be able to perform seamless handovers from one access network to
   another without breaking the established VPN sessions.  In some
   situations it can also be beneficial to combine two or more access
   networks together to increase the available host bandwidth.  A
   protocol such as Multipath TCP supports those handovers and allows
   aggregating the bandwidth of different access links.  It could be
   combined with single-path VPN protocols to support both seamless
   handovers and bandwidth aggregation above VPN tunnels.
   Unfortunately, Multipath TCP is not yet deployed on most Internet
   servers and thus few applications would benefit from such a use case.

   The QUIC protocol opens up a new way to find a clean solution to this
   problem.  First, QUIC includes the same encryption and authentication
   techniques as deployed VPN protocols.  Second, QUIC is intended to be
   widely used to support web-based services, making it unlikely to be
   filtered in many networks, in contrast with VPN protocols.  Third,



Piraux & Bonaventure     Expires August 8, 2020                 [Page 2]

Internet-Draft                 QUIC Tunnel                 February 2020


   the QUIC migration mechanism enables handovers between several
   network interfaces.

   In this document, we explore how QUIC could be used to enable multi-
   homed mobile devices to communicate securely in untrusted networks.
   Section 3 describes the reference environment of this document.
   Then, we propose a first mode of operation, explained in Section 4,
   that uses the recently proposed datagram extension
   ([I-D.pauly-quic-datagram]) for QUIC to transport plain IP packets
   over a QUIC connection.  Section 5 specifies how a connection is
   established in this document proposal.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Reference environment

   We consider a multihomed client that is attached to one or several
   access networks.  It establishes one or several QUIC connections to a
   concentrator, taking advantage of the several access networks
   available.  These QUIC connections are used to carry the UDP and TCP
   packets sent by the client.  Thanks to the QUIC migration mechanism,
   the connection can be migrated to another access network when needed.
   Thanks to the security mechanisms used by QUIC, the client data is
   protected against attacks in any of the access networks.  The client
   trusts the concentrator.  The concentrator decrypts the QUIC packets
   exchanged over the QUIC connections and interacts with the remote
   hosts as a VPN concentrator would do.


















Piraux & Bonaventure     Expires August 8, 2020                 [Page 3]

Internet-Draft                 QUIC Tunnel                 February 2020


              +---------+
         .----| Access  |----.
         |    | network |    |
         v    |    A    |    |
  +--------+  +----------    v                           +-------------+
  | Multi  |              +--------------+               | Final       |
  | homed  |              | Concentrator |<===\ ... \===>| destination |
  | client |              +--------------+               | server      |
  +--------+  +---------+    ^                           +-------------+
         ^    | Access  |    |
         |    | network |    |            Legend:
         .----|    B    |----.              --- QUIC connection
              +---------+                   === TCP/UDP flow

                       Figure 1: Example environment

   Figure 1 illustrates a client-initiated flow.  We also discuss
   inbound connections in this document in Section 5.

4.  The datagram mode

   Our first mode of operation, called the datagram mode in this
   document, enables the client and the concentrator to exchange raw IP
   packets through the QUIC connection.  This is done by using the
   recently proposed QUIC datagram extension [I-D.pauly-quic-datagram].
   In a nutshell, to send an IP packet to a remote host, the client
   simply passes the entire packet as a datagram to the QUIC connection
   established with the concentrator.  The IP packet is encoded in a
   QUIC DATAGRAM frame, then encrypted and authenticated in a QUIC
   packet.  This transmission is subject to congestion control, but the
   datagram that contains the packet is not retransmitted in case of
   losses as specified in [I-D.pauly-quic-datagram].  The datagram mode
   is intended to provide a similar service as the one provided by IPSec
   tunnels or DTLS.

















Piraux & Bonaventure     Expires August 8, 2020                 [Page 4]

Internet-Draft                 QUIC Tunnel                 February 2020


                ,->+----------+
                |  |    IP    |
    QUIC packet |  +----------+
    containing  |  |    UDP   |
    a DATAGRAM  |  +----------+
    frame       |  |   QUIC   |
                |  |..........|
                |  | DATAGRAM |
                |  |+--------+|<-.
                |  ||   IP   ||  |
                |  |+--------+|  | Tunneled
                |  ||   UDP  ||  | UDP packet
                |  |+--------+|  |
                |  |   ....   |<-.
                `->+----------+

   Figure 2: QUIC packet sent by the client when tunneling a UDP packet

   Figure 2 illustrates how a UDP packet is tunneled using the datagram
   mode.  The main advantage of the datagram mode is that it supports IP
   and any protocol above the network layer.  Any IP packet can be
   transported using the datagram extension over a QUIC connection.
   However, this advantage comes with a large per-packet overhead since
   each packet contains both a network and a transport header.  All
   these headers must be transmitted in addition with the IP/UDP/QUIC
   headers of the QUIC connection.  For TCP connections for instance,
   the per-packet overhead can be large.

5.  Connection establishment

   During connection establishment, the QUIC tunnel support is indicated
   by setting the ALPN token "qt" in the TLS handshake.  Draft-version
   implementations MAY specify a particular draft version by suffixing
   the token, e.g. "qt-00" refers to the first version of this document.

   After the QUIC connection is established, the client can start using
   the datagram or the stream mode.  The client may use PCP [RFC6887] to
   request the concentrator to accept inbound connections on their
   behalf.  After the negotiation of such port mappings, the
   concentrator can start opening bidirectional streams to forward
   inbound connections as well as sending IP packets containing inbound
   UDP connections in QUIC datagrams.

6.  Security Considerations







Piraux & Bonaventure     Expires August 8, 2020                 [Page 5]

Internet-Draft                 QUIC Tunnel                 February 2020


6.1.  Privacy

   The Concentrator has access to all the packets it processes.  It MUST
   be protected as a core IP router, e.g. as specified in [RFC1812].

6.2.  Ingress Filtering

   Ingress filtering policies MUST be enforced at the network
   boundaries, i.e. as specified in [RFC2827].

7.  IANA Considerations

7.1.  Registration of QUIC tunnel Identification String

   This document creates a new registration for the identification of
   the QUIC tunnel protocol in the "Application Layer Protocol
   Negotiation (ALPN) Protocol IDs" registry established in [RFC7301].

   The "qt" string identifies the QUIC tunnel protocol.

   Protocol: QUIC tunnel

   Identification Sequence: 0x71 0x74 ("qt")

   Specification: This document

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

8.2.  Informative References

   [I-D.pauly-quic-datagram]
              Pauly, T., Kinnear, E., and D. Schinazi, "An Unreliable
              Datagram Extension to QUIC", draft-pauly-quic-datagram-05
              (work in progress), November 2019.






Piraux & Bonaventure     Expires August 8, 2020                 [Page 6]

Internet-Draft                 QUIC Tunnel                 February 2020


   [RFC1812]  Baker, F., Ed., "Requirements for IP Version 4 Routers",
              RFC 1812, DOI 10.17487/RFC1812, June 1995,
              <https://www.rfc-editor.org/info/rfc1812>.

   [RFC2827]  Ferguson, P. and D. Senie, "Network Ingress Filtering:
              Defeating Denial of Service Attacks which employ IP Source
              Address Spoofing", BCP 38, RFC 2827, DOI 10.17487/RFC2827,
              May 2000, <https://www.rfc-editor.org/info/rfc2827>.

   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and
              P. Selkirk, "Port Control Protocol (PCP)", RFC 6887,
              DOI 10.17487/RFC6887, April 2013,
              <https://www.rfc-editor.org/info/rfc6887>.

   [RFC7301]  Friedl, S., Popov, A., Langley, A., and E. Stephan,
              "Transport Layer Security (TLS) Application-Layer Protocol
              Negotiation Extension", RFC 7301, DOI 10.17487/RFC7301,
              July 2014, <https://www.rfc-editor.org/info/rfc7301>.

Acknowledgments

   Thanks to Quentin De Coninck and Francois Michel for their comments
   and the proofreading of the first version of this document.  Thanks
   to Gregory Vander Schueren for his comments on the first version of
   this document.

Authors' Addresses

   Maxime Piraux (editor)
   UCLouvain

   Email: maxime.piraux@uclouvain.be


   Olivier Bonaventure
   UCLouvain

   Email: olivier.bonaventure@uclouvain.be













Piraux & Bonaventure     Expires August 8, 2020                 [Page 7]
